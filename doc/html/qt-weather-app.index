<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="QT weather app Reference Documentation" version="" project="QT weather app">
    <namespace threadsafety="unspecified" name="" status="active" access="public" module="qt weather app">
        <page name="classes.html" href="classes.html" status="active" location="main.qdoc" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/doc/doc-src/main.qdoc" lineno="54" subtype="page" title="All clasess" fulltitle="All clasess" subtitle="" module="QT weather app">
            <contents name="annotated-classes" title="Annotated classes" level="1"/>
            <contents name="function-index" title="Function index" level="1"/>
        </page>
        <page name="index.html" href="index.html" status="active" location="main.qdoc" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/doc/doc-src/main.qdoc" lineno="41" subtype="page" title="QT weather app" fulltitle="QT weather app" subtitle="" module="QT weather app">
            <contents name="about-app" title="About app" level="1"/>
            <contents name="toolchains" title="Toolchains" level="1"/>
        </page>
        <namespace threadsafety="unspecified" name="Ui" href="ui.html" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="11"/>
        <class threadsafety="unspecified" name="MainWindow" href="mainwindow.html" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="15" module="core" brief="Joins the GUI and the application logic">
            <function threadsafety="unspecified" name="MainWindow" fullname="MainWindow::MainWindow" href="mainwindow.html#MainWindow" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="23" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Constructor with optional parent widget" signature="MainWindow(QWidget *parent)">
                <parameter left="QWidget *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="configureSerialPort" fullname="MainWindow::configureSerialPort" href="mainwindow.html#configureSerialPort" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Find correct NXP device and prepare data broadcast" signature="void configureSerialPort()"/>
            <function threadsafety="unspecified" name="connectHandlers" fullname="MainWindow::connectHandlers" href="mainwindow.html#connectHandlers" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="29" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Connect all signals with handlers" signature="void connectHandlers()"/>
            <function threadsafety="unspecified" name="onHumidityChanged" fullname="MainWindow::onHumidityChanged" href="mainwindow.html#onHumidityChanged" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="37" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Humidity chaged slot. This is used for presenting and storing actual values. The humidity parameter holds new value" signature="void onHumidityChanged(double humidity)">
                <parameter left="double" right="" name="humidity" default=""/>
            </function>
            <function threadsafety="unspecified" name="onPressureChanged" fullname="MainWindow::onPressureChanged" href="mainwindow.html#onPressureChanged" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="38" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Pressure chaged slot. This is used for presenting and storing actual values. The pressure parameter holds new value" signature="void onPressureChanged(double pressure)">
                <parameter left="double" right="" name="pressure" default=""/>
            </function>
            <function threadsafety="unspecified" name="onTemperatureChanged" fullname="MainWindow::onTemperatureChanged" href="mainwindow.html#onTemperatureChanged" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="36" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Temperature chaged slot. This is used for presenting and storing actual values. The temperature parameter holds new value" signature="void onTemperatureChanged(double temperature)">
                <parameter left="double" right="" name="temperature" default=""/>
            </function>
            <function threadsafety="unspecified" name="onThreadTick" fullname="MainWindow::onThreadTick" href="mainwindow.html#onThreadTick" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="32" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="External thread tick handler. It is used for checking USB data presence" signature="void onThreadTick()"/>
            <function threadsafety="unspecified" name="onTimerTimeout" fullname="MainWindow::onTimerTimeout" href="mainwindow.html#onTimerTimeout" status="internal" access="private" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="33" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Timer timeout handler. It sends USB commands" signature="void onTimerTimeout()"/>
            <function threadsafety="unspecified" name="setTimerTimeout" fullname="MainWindow::setTimerTimeout" href="mainwindow.html#setTimerTimeout" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="25" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Set sensor data readout frequency. It is used for choosing USB data refresh time. The timeout parameter stores new timeout in milliseconds" signature="void setTimerTimeout(int timeout)">
                <parameter left="int" right="" name="timeout" default=""/>
            </function>
            <function threadsafety="unspecified" name="~MainWindow" fullname="MainWindow::~MainWindow" href="mainwindow.html#dtor.MainWindow" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="24" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="MainWindow destructor" signature="~MainWindow()"/>
            <variable threadsafety="unspecified" name="DefaultRefresh" fullname="MainWindow::DefaultRefresh" href="mainwindow.html#DefaultRefresh-var" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="21" type="const int = 1000" static="true"/>
            <variable threadsafety="unspecified" name="SendAllCommand" fullname="MainWindow::SendAllCommand" href="mainwindow.html#SendAllCommand-var" status="active" access="public" location="mainwindow.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/mainwindow.h" lineno="20" type="const QString" static="true" brief="Default command for sending all sensor data"/>
        </class>
        <class threadsafety="unspecified" name="Parser" href="parser.html" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="6" module="core" brief="Way to parse crude sensor data">
            <function threadsafety="unspecified" name="Parser" fullname="Parser::Parser" href="parser.html#Parser" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="10" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Parser class constructor with optional parent object" signature="Parser(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="humidityChanged" fullname="Parser::humidityChanged" href="parser.html#humidityChanged" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="15" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Signal is emmited when humidity has changed. The humidity parameter holds the actual value" signature="void humidityChanged(double humidity)">
                <parameter left="double" right="" name="humidity" default=""/>
            </function>
            <function threadsafety="unspecified" name="parseSensorData" fullname="Parser::parseSensorData" href="parser.html#parseSensorData" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="11" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Parse crude sensor data. The data format is T{value}|H{value}|P{value}, where {value} is a placeholder for real double value. This function emits" signature="void parseSensorData(const QString &amp;data)">
                <parameter left="const QString &amp;" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="pressureChanged" fullname="Parser::pressureChanged" href="parser.html#pressureChanged" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="16" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Signal is emmited when pressure has changed. The pressure parameter holds the actual value" signature="void pressureChanged(double pressure)">
                <parameter left="double" right="" name="pressure" default=""/>
            </function>
            <function threadsafety="unspecified" name="temperatureChanged" fullname="Parser::temperatureChanged" href="parser.html#temperatureChanged" status="active" access="public" location="parser.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/parser.h" lineno="14" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Signal is emmited when temperature has changed. The temperature parameter holds the actual value" signature="void temperatureChanged(double temperature)">
                <parameter left="double" right="" name="temperature" default=""/>
            </function>
        </class>
        <class threadsafety="unspecified" name="SensorData" href="sensordata.html" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="6" module="core" brief="Represents single data measurment">
            <function threadsafety="unspecified" name="SensorData" fullname="SensorData::SensorData" href="sensordata.html#SensorData" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="10" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Default SensorData constructor sets all sensor data to zero. Optional parent object can be sent" signature="SensorData(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="SensorData" fullname="SensorData::SensorData" href="sensordata.html#SensorData-1" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="11" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Sensor data constructor initializes all values using temperature, humidity and pressure arguments. Also parent object can be sent" signature="SensorData(double temperature, double humidity, double pressure, QObject *parent)">
                <parameter left="double" right="" name="temperature" default=""/>
                <parameter left="double" right="" name="humidity" default=""/>
                <parameter left="double" right="" name="pressure" default=""/>
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="setHumidity" fullname="SensorData::setHumidity" href="sensordata.html#setHumidity" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="17" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Set current humidity using value parameter" signature="void setHumidity(double value)">
                <parameter left="double" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setPressure" fullname="SensorData::setPressure" href="sensordata.html#setPressure" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="20" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setPressure(double value)">
                <parameter left="double" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setTemperature" fullname="SensorData::setTemperature" href="sensordata.html#setTemperature" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="14" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Set current temperature using value parameter" signature="void setTemperature(double value)">
                <parameter left="double" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="toString" fullname="SensorData::toString" href="sensordata.html#toString" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QString" brief="Return string containing all sensor data. This is for testing purposes" signature="QString toString() const"/>
            <function threadsafety="unspecified" name="getHumidity" fullname="SensorData::getHumidity" href="sensordata.html#getHumidity" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="16" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" brief="Get current humidity" signature="double getHumidity() const"/>
            <function threadsafety="unspecified" name="getPressure" fullname="SensorData::getPressure" href="sensordata.html#getPressure" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="19" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" brief="Get current pressure" signature="double getPressure() const"/>
            <function threadsafety="unspecified" name="getTemperature" fullname="SensorData::getTemperature" href="sensordata.html#getTemperature" status="active" access="public" location="sensordata.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/sensordata.h" lineno="13" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="double" brief="Get current temperature" signature="double getTemperature() const"/>
        </class>
        <class threadsafety="unspecified" name="Thread" href="thread.html" status="active" access="public" location="thread.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/thread.h" lineno="6" module="core" brief="Way to do some tasks parallel">
            <function threadsafety="unspecified" name="Thread" fullname="Thread::Thread" href="thread.html#Thread" status="active" access="public" location="thread.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/thread.h" lineno="10" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" brief="Constructor with optional parent object" signature="Thread(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="nullptr"/>
            </function>
            <function threadsafety="unspecified" name="run" fullname="Thread::run" href="thread.html#run" status="internal" access="private" location="thread.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/thread.h" lineno="13" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" brief="Thread behaviour" signature="void run() override"/>
            <function threadsafety="unspecified" name="tick" fullname="Thread::tick" href="thread.html#tick" status="active" access="public" location="thread.h" filepath="/home/sobriodev/weather_qt/qt_weather/qt_weather/thread.h" lineno="16" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" brief="Signal is emmited with 1ms frequency" signature="void tick()"/>
        </class>
        <module name="core" href="core-module.html" status="internal" seen="false" title="" members="MainWindow,Parser,SensorData,Thread"/>
    </namespace>
</INDEX>
